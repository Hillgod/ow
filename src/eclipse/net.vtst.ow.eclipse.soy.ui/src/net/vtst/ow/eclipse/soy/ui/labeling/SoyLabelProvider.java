/*
* generated by Xtext
*/
package net.vtst.ow.eclipse.soy.ui.labeling;

import net.vtst.ow.eclipse.soy.soy.DelTemplate;
import net.vtst.ow.eclipse.soy.soy.RegularTemplate;
import net.vtst.ow.eclipse.soy.soy.SoyFile;
import net.vtst.ow.eclipse.soy.ui.SoyImageHelper;
import net.vtst.ow.eclipse.soy.ui.SoyUiMessages;

import org.eclipse.emf.common.util.URI;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.emf.edit.ui.provider.AdapterFactoryLabelProvider;
import org.eclipse.jface.resource.JFaceResources;
import org.eclipse.jface.viewers.StyledString;
import org.eclipse.jface.viewers.StyledString.Styler;
import org.eclipse.swt.SWT;
import org.eclipse.swt.graphics.Font;
import org.eclipse.swt.graphics.FontData;
import org.eclipse.swt.graphics.TextStyle;
import org.eclipse.xtext.ui.label.DefaultEObjectLabelProvider;

import com.google.inject.Inject;

/**
 * Provides labels for a EObjects.
 * 
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#labelProvider
 */
public class SoyLabelProvider extends DefaultEObjectLabelProvider {

  @Inject
  private SoyUiMessages messages;
  
  private final Styler rootStyler;

	@Inject
	public SoyLabelProvider(AdapterFactoryLabelProvider delegate) {
    super(delegate);

    FontData[] fontData = JFaceResources.getDefaultFont().getFontData();
    
    FontData[] boldFontData = getModifiedFontData(fontData, SWT.BOLD);
    final Font boldFont = new Font(JFaceResources.getDefaultFont().getDevice(), boldFontData);
    rootStyler = new Styler() {
      public void applyStyles(TextStyle textStyle) {
        textStyle.font = boldFont;
      }
    };
	}
	
  private static FontData[] getModifiedFontData(FontData[] originalData, int additionalStyle) {
    FontData[] styleData = new FontData[originalData.length];
    for (int i = 0; i < styleData.length; i++) {
      FontData base = originalData[i];
      styleData[i] = new FontData(base.getName(), base.getHeight(), base.getStyle() | additionalStyle);
    }
    return styleData;
   } 

	
  StyledString text(SoyFile obj) {
    // We are careful about null, because we don't know all possible cases.
	  Resource resource = obj.eResource();
	  String label = messages.getString("soy_file");
	  if (resource != null) {
	    URI uri = resource.getURI();
	    if (uri != null) label = (label + " [" + uri.lastSegment() + "]");
	  }
	  return new StyledString(label, rootStyler);
	}

  String text(RegularTemplate template) {
    return template.getIdent();
  }

  String text(DelTemplate template) {
    return template.getIdent();
  }
  
  String image(SoyFile obj) { return SoyImageHelper.SOY_FILE; }
  String image(RegularTemplate obj) { return SoyImageHelper.TEMPLATE; }
  String image(DelTemplate obj) { return SoyImageHelper.DELTEMPLATE; }
  
}
